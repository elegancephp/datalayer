[#PHP]

/***************************************************\
|* Arquivo de driver gerado por Elegance/Datalayer *|
|* ALTERAÇÕES REALIZADAS AQUI SERÃO SER PERDIDAS   *|
\***************************************************/

namespace [#namespace]\Driver;

/**
 * @method \[#namespace]\Record\Record[#tableClassName] active Retorna o regitro marcado como ativo
 * @method \[#namespace]\Record\Record[#tableClassName] getAuto Busca um registro baseando-se os parametros fornecidos
 * @method \[#namespace]\Record\Record[#tableClassName] getNew Retorna um registro NOVO
 * @method \[#namespace]\Record\Record[#tableClassName] getNull Retorna um registro NULO
 * @method \[#namespace]\Record\Record[#tableClassName] getOne Busca um registro
 * @method \[#namespace]\Record\Record[#tableClassName] getKey Busca um registro baseado na IDKey
 * @method \[#namespace]\Record\Record[#tableClassName][] get Busca varios registros
 */
abstract class DriverTable[#tableClassName] extends \Elegance\Datalayer\Driver\Table
{
    protected $datalayer = '[#datalayer]';
    protected $table = '[#tableName]';

    protected $metaField = [#useMetaField];
    protected $smartControl = [#useSmartControl];

    protected $recordClass = '[#namespace]\Record\Record[#tableClassName]';

[#smartControl]}

/***************************************************\
|* Arquivo de driver gerado por Elegance/Datalayer *|
|* ALTERAÇÕES REALIZADAS AQUI SERÃO SER PERDIDAS   *|
\***************************************************/